import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler

# Load the dataset.
df = pd.read_csv('sample_data/heart.csv')

# Handle missing values (if any).
# For example, you can replace missing values with the mean:
df.fillna(df.mean(), inplace=True)
# Or you can drop rows with missing values:
# df.dropna(inplace=True)

# Convert categorical features to numerical using one-hot encoding.
df = pd.get_dummies(df, columns=['sex', 'cp', 'fbs', 'restecg', 'exang', 'slope', 'ca', 'thal'])

# Split data into training and testing sets.
X = df.drop('target', axis=1)
y = df['target']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Scale numerical features using StandardScaler.
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)





